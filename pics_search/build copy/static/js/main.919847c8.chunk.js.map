{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/ImageList.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","onFormSubmit","event","preventDefault","props","onSubmit","className","this","style","textAlign","fontSize","type","value","onChange","e","setState","target","React","Component","ImageList","images","map","image","maxWidth","height","alt","description","key","id","src","urls","full","App","page","sterm","onSearchSubmit","a","unsplash","get","params","query","response","data","results","console","log","fetchMoreData","concat","marginTop","dataLength","length","next","hasMore","loader","ReactDOM","render","document","querySelector"],"mappings":"8PAGeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,2BACTC,QAAS,CACLC,cAAe,2DC4BRC,E,4MA9BZC,MAAQ,CAACC,KAAK,I,EAIdC,aAAe,SAACC,GACXA,EAAMC,iBAEN,EAAKC,MAAMC,SAAS,EAAKN,MAAMC,O,uDAK1B,IAAD,OACJ,OACA,yBAAKM,UAAY,cACb,0BAAMA,UAAY,UAAUD,SAAWE,KAAKN,cACxC,yBAAKK,UAAY,SACb,2BAAOE,MAAS,CAACC,UAAY,SAAUC,SAAU,SAAjD,kBACA,2BAAOC,KAAO,OAAOC,MAASL,KAAKR,MAAMC,KAAMa,SAAY,SAACC,GAAD,OAAO,EAAKC,SAAS,CAACf,KAAMc,EAAEE,OAAOJ,kB,GApB5FK,IAAMC,WCOfC,G,MANG,SAACf,GACf,IAAMgB,EAAUhB,EAAMgB,OAAOC,KAAI,SAAAC,GAAK,OAAI,yBAAKd,MAAO,CAACe,SAAS,OAAOC,OAAO,QAASC,IAAKH,EAAMI,YAAaC,IAAOL,EAAMM,GAAIC,IAAOP,EAAMQ,KAAKC,UAElJ,OAAO,6BAAMX,EAAN,O,QC2DIY,E,4MAzDXjC,MAAQ,CAACqB,OAAQ,GAAIa,KAAM,EAAGC,MAAM,I,EAEpCC,e,uCAAiB,WAAOnC,GAAP,eAAAoC,EAAA,sEAEUC,EAASC,IAAI,iBAAiB,CACjDC,OAAQ,CAACN,KAAM,EAAKlC,MAAMkC,KAAMO,MAAMxC,KAH7B,OAEPyC,EAFO,OAOb,EAAK1B,SAAS,CAACK,OAAQqB,EAASC,KAAKC,QAAST,MAAMlC,IACpD4C,QAAQC,IAAI,EAAK9C,MAAMqB,QARV,2C,wDAYjB0B,cAAgB,WAKZ,OAJA,EAAK/B,SAAS,CAACkB,KAAM,EAAKlC,MAAMkC,KAAK,IACrC,EAAKE,eAAe,EAAKpC,MAAMmC,OAC/B,EAAKnB,SAAS,CAACK,OAAO,EAAKrB,MAAMqB,OAAO2B,OAAO,EAAKhD,MAAMqB,UAG1D,yBAAKd,UAAY,gBAAgB,kBAAC,EAAD,CAAWc,OAAS,EAAKrB,MAAMqB,W,uDAchE,OACI,yBAAKd,UAAY,eACTE,MAAQ,CAACwC,UAAY,SACrB,kBAAC,EAAD,CAAW3C,SAAYE,KAAK4B,iBAC5B,kBAAC,IAAD,CACAc,WAAY1C,KAAKR,MAAMqB,OAAO8B,OAC9BC,KAAM5C,KAAKuC,cACXM,SAAS,EACTC,OAAQ,2CAIP,kBAAC,EAAD,CAAWjC,OAAQb,KAAKR,MAAMqB,e,GA/CjCH,IAAMC,WCHxBoC,IAASC,OAAO,kBAAC,EAAD,MAAOC,SAASC,cAAc,Y","file":"static/js/main.919847c8.chunk.js","sourcesContent":["\nimport axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://api.unsplash.com',\n    headers: {\n        Authorization: 'Client-ID CXcGzHNsI0bAYtKRCjJxqvasqqWni28jNdIui7XH5f4'\n    }\n})","import React from 'react';\n\nclass SearchBar extends React.Component{\n\n   state = {term:''};\n\n\n\n   onFormSubmit = (event) => {\n        event.preventDefault();\n\n        this.props.onSubmit(this.state.term);\n   }\n   \n\n\n    render(){\n        return (\n        <div className = \"ui segment\"> \n            <form className = \"ui form\" onSubmit= {this.onFormSubmit}>\n                <div className = \"field\">\n                    <label style = {{textAlign : \"center\", fontSize: \"20px\"}}> Image Search </label>\n                    <input type = 'text' value = {this.state.term} onChange = {(e) => this.setState({term: e.target.value})}  ></input>\n                    \n                </div>\n                \n\n                \n            </form>\n        </div>\n        )\n    }\n}\n\nexport default SearchBar;","import React from 'react';\nimport './style.css'\n\nconst ImageList = (props) => {\n    const images =  props.images.map(image => <img style={{maxWidth:'100%',height:'auto'}} alt={image.description} key = {image.id} src = {image.urls.full }/>)\n    \n    return <div>{images} </div>;\n}\n\nexport default ImageList;","import React from 'react';\nimport unsplash from '../api/unsplash';\nimport SearchBar from './SearchBar';\nimport ImageList from './ImageList';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\n\nclass App extends React.Component {\n    state = {images: [] ,page: 1, sterm:''};\n\n    onSearchSubmit = async (term) => {\n        \n        const response = await unsplash.get('/search/photos',{\n            params: {page: this.state.page, query:term },\n            \n            \n        });\n        this.setState({images: response.data.results, sterm:term});\n        console.log(this.state.images)\n        \n    }\n\n    fetchMoreData = () => {\n        this.setState({page: this.state.page+1})\n        this.onSearchSubmit(this.state.sterm)\n        this.setState({images:this.state.images.concat(this.state.images)\n        })\n        return (\n        <div className = \"ui container\" ><ImageList images= {this.state.images}/></div> \n        )\n    }\n    // render(){\n\n//     return (\n//     <div className = \"ui container\" \n//         style ={{marginTop : '10px'}}>    \n//         <SearchBar onSubmit = {this.onSearchSubmit}/>\n        \n//         <ImageList images = {this.state.images}/>    \n//     </div>);\n// }\n    render() {\n        return (\n            <div className = \"ui container\" \n                    style ={{marginTop : '10px'}}>    \n                    <SearchBar onSubmit = {this.onSearchSubmit}/>\n                    <InfiniteScroll\n                    dataLength={this.state.images.length}\n                    next={this.fetchMoreData}\n                    hasMore={true}\n                    loader={<h4>Loading...</h4>}\n                    >\n                        \n                     \n                     <ImageList images={this.state.images}/> \n                        \n                    \n                    \n                    \n                    </InfiniteScroll>\n        </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nReactDOM.render(<App/>,document.querySelector('#root'))\n"],"sourceRoot":""}